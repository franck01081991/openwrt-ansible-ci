---
name: Ansible CI

concurrency:
  group: ansible-ci-${{ github.ref }}
  cancel-in-progress: true

'on':
  push:
    paths:
      - '.github/**'
      - 'ansible.cfg'
      - 'requirements.yml'
      - '.pre-commit-config.yaml'
      - 'commitlint.config.js'
      - 'Makefile'
      - 'sops.yaml'
      - 'inventories/**'
      - 'group_vars/**'
      - 'playbooks/**'
      - 'roles/**'
      - 'imagebuilder/**'
      - 'scripts/**'
  pull_request:
    paths:
      - '.github/**'
      - 'ansible.cfg'
      - 'requirements.yml'
      - '.pre-commit-config.yaml'
      - 'commitlint.config.js'
      - 'Makefile'
      - 'sops.yaml'
      - 'inventories/**'
      - 'group_vars/**'
      - 'playbooks/**'
      - 'roles/**'
      - 'imagebuilder/**'
      - 'scripts/**'

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Setup Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: >-
            ${{ runner.os }}-pip-${{ hashFiles(
              'requirements.yml', '.pre-commit-config.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Cache pre-commit
        uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: >-
            ${{ runner.os }}-pre-commit-${{ hashFiles(
              '.pre-commit-config.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pre-commit-

      - name: Cache Ansible collections
        uses: actions/cache@v4
        with:
          path: ~/.ansible
          key: >-
            ${{ runner.os }}-ansible-${{ hashFiles(
              'requirements.yml', '.pre-commit-config.yaml') }}
          restore-keys: |
            ${{ runner.os }}-ansible-

      - name: Install Ansible + linters + pre-commit
        run: |
          python -m pip install --upgrade pip
          pip install \
            "ansible-core>=2.14,<2.17" \
            ansible-lint yamllint pre-commit docker
          ansible --version
          ansible-lint --version
          yamllint --version
          pre-commit --version

      - name: Install Ansible collections
        run: ansible-galaxy collection install -r requirements.yml
      - name: Run lint
        run: make lint

      - name: Trivy filesystem scan
        uses: aquasecurity/trivy-action@0.33.1
        with:
          scan-type: fs
          scanners: vuln,config,secret
          exit-code: '0'
          ignore-unfixed: true
          severity: CRITICAL,HIGH

  test:
    needs: lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        env: [lab, staging, production]
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Setup Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: >-
            ${{ runner.os }}-pip-${{ hashFiles(
              'requirements.yml', '.pre-commit-config.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Cache pre-commit
        uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: >-
            ${{ runner.os }}-pre-commit-${{ hashFiles(
              '.pre-commit-config.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pre-commit-

      - name: Cache Ansible collections
        uses: actions/cache@v4
        with:
          path: ~/.ansible
          key: >-
            ${{ runner.os }}-ansible-${{ hashFiles(
              'requirements.yml', '.pre-commit-config.yaml') }}
          restore-keys: |
            ${{ runner.os }}-ansible-

      - name: Install Ansible dependencies
        run: |
          python -m pip install --upgrade pip
          pip install \
            "ansible-core>=2.14,<2.17" \
            docker
          ansible --version

      - name: Install Ansible collections
        run: ansible-galaxy collection install -r requirements.yml

      - name: Run tests
        env:
          ENV: ${{ matrix.env }}
          ARTIFACT_DIR: test-logs
        run: make test

      - name: Upload test logs
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-logs-${{ matrix.env }}
          path: test-logs
          if-no-files-found: ignore

  deploy:
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        env: [lab, staging, production]
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Deploy
        run: ENV=${{ matrix.env }} make deploy
